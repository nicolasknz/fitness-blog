{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nicolas/coding-stuff/fitness-blog/pages/Landing/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Prismic from 'prismic-javascript';\nimport { RichText } from 'prismic-reactjs';\nimport Header from \"../../src/components/header\";\nimport Banner from \"../../src/components/banner\";\nimport Card from \"../../src/components/card\";\nimport { posts } from \"../../src/utils/posts/\";\nimport * as Styled from \"./styles\";\nimport TopBar from \"../../src/components/top-bar\";\nconst apiEndpoint = \"https://fitness-blog.cdn.prismic.io/api/v2\";\nconst accessToken = '';\nconst Client = Prismic.client(apiEndpoint, {\n  accessToken\n});\n\nconst Home = () => {\n  _s();\n\n  var _doc$data;\n\n  const {\n    0: doc,\n    1: setDocData\n  } = useState(null);\n  console.log(doc);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await Client.query(Prismic.Predicates.at('document.type', 'article'));\n\n      if (response) {\n        setDocData(response.results);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Styled.LandingContainer, {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(RichText, {\n      render: doc === null || doc === void 0 ? void 0 : (_doc$data = doc.data) === null || _doc$data === void 0 ? void 0 : _doc$data.texto\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Styled.ContentContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Styled.PostsWrapper, {\n        children: [doc === null || doc === void 0 ? void 0 : doc.map((post, key) => /*#__PURE__*/_jsxDEV(Card, {\n          thumbnail: {\n            image: post.data.author_image.url,\n            alt: post.data.author_image.alt\n          },\n          title: post.data.title[0].text,\n          description: post.data.subtitle[0].text,\n          author: {\n            image: post.data.author_image.url,\n            name: post.data.author_name[0].text\n          },\n          releaseDate: post.data.publish_date\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)), posts.map(({\n          title,\n          thumbnail,\n          description,\n          author,\n          releaseDate\n        }, index) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            thumbnail: {\n              image: thumbnail.image,\n              alt: thumbnail.alt\n            },\n            title: title,\n            description: description,\n            author: {\n              image: author.image,\n              name: author.name\n            },\n            releaseDate: releaseDate\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"woK5QZBeZDb2npKouOi9J8/wpEM=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/nicolas/coding-stuff/fitness-blog/pages/Landing/index.tsx"],"names":["React","useEffect","useState","Prismic","RichText","Header","Banner","Card","posts","Styled","TopBar","apiEndpoint","accessToken","Client","client","Home","doc","setDocData","console","log","fetchData","response","query","Predicates","at","results","data","texto","map","post","key","image","author_image","url","alt","title","text","subtitle","name","author_name","publish_date","thumbnail","description","author","releaseDate","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\n\n\nimport Prismic from 'prismic-javascript'\nimport {Date, Link, RichText} from 'prismic-reactjs';\n\nimport Header from \"../../src/components/header\";\nimport Banner from \"../../src/components/banner\";\nimport banner from \"../../src/assets/images/banner.jpg\";\nimport Card from \"../../src/components/card\";\n\nimport { posts } from \"../../src/utils/posts/\";\n\nimport * as Styled from \"./styles\";\nimport TopBar from \"../../src/components/top-bar\";\n\ninterface CardProps {\n  thumbnail: {\n    image: string;\n    alt: string;\n  };\n  description: string;\n  title: string;\n  author: {\n    image: string;\n    name: string;\n  };\n  releaseDate: string;\n}\n\nconst apiEndpoint = \"https://fitness-blog.cdn.prismic.io/api/v2\"\n\nconst accessToken = ''\n\nconst Client = Prismic.client(apiEndpoint, { accessToken })\n\nconst Home = () => {\n  const [doc, setDocData]:any = useState(null)\n  console.log(doc)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response:any = await Client.query(\n        Prismic.Predicates.at('document.type', 'article')\n      )\n      if (response ){\n        setDocData(response.results)\n      }\n    }\n    fetchData()\n  },[])\n\n\n  return (\n    <Styled.LandingContainer className=\"container\">\n\n    \n    <RichText \n      render={doc?.data?.texto}\n    />\n\n      <TopBar />\n      <Styled.ContentContainer>\n      <Header />\n        <Banner />\n        <Styled.PostsWrapper>\n          {doc?.map((post:any, key:any) => \n           \n             (\n              <Card\n              thumbnail={{\n                image: post.data.author_image.url,\n                alt: post.data.author_image.alt,\n              }}\n              title={post.data.title[0].text}\n              description={post.data.subtitle[0].text}\n              author={{\n                image: post.data.author_image.url,\n                name: post.data.author_name[0].text,\n              }}\n              releaseDate={post.data.publish_date}\n              key={key}\n            />\n            )\n          )}\n          {posts.map(\n            (\n              { title, thumbnail, description, author, releaseDate }: CardProps,\n              index\n            ) => {\n              return (\n                <Card\n                  thumbnail={{\n                    image: thumbnail.image,\n                    alt: thumbnail.alt,\n                  }}\n                  title={title}\n                  description={description}\n                  author={{\n                    image: author.image,\n                    name: author.name,\n                  }}\n                  releaseDate={releaseDate}\n                  key={index}\n                />\n              );\n            }\n          )}\n        </Styled.PostsWrapper>\n      </Styled.ContentContainer>\n    </Styled.LandingContainer>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}